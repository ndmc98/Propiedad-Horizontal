/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import logica.Parqueadero;
import java.util.logging.Level;
import java.util.logging.Logger;
import logica.Conjunto;
import logica.Inmobiliaria;
import util.CaException;

/**
 *
 * @author Hogar
 */
public class JFrameParqueadero extends javax.swing.JFrame {

    Parqueadero parqueadero;
    Inmobiliaria inmobiliaria = new Inmobiliaria();
    Conjunto conjunto;

    /**
     * Creates new form JFrameParqueadero
     */
    public JFrameParqueadero(Conjunto conjunto) {
        initComponents();
        this.conjunto = conjunto;
        actualizarBloques();
        lblNumApto.setVisible(false);
        listaAptos.setVisible(false);
        btnCrear.setEnabled(false);
    }

    public void actualizarBloques() {
        try {
            listBloque.removeAllItems();
            for (int i = 0; i < inmobiliaria.listaBloques(conjunto.getK_codigo()).getItemCount(); i++) {
                listBloque.addItem(inmobiliaria.listaBloques(conjunto.getK_codigo()).getItemAt(i));
            }
        } catch (CaException ex) {
            Logger.getLogger(Bienvenida.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void listaAptos() {
        try {
            listaAptos.removeAllItems();
            for (int i = 0; i < inmobiliaria.listaEspacios(Integer.parseInt((String) listBloque.getSelectedItem()), conjunto.getK_codigo()).getItemCount(); i++) {
                listaAptos.addItem(inmobiliaria.listaEspacios(Integer.parseInt((String) listBloque.getSelectedItem()), conjunto.getK_codigo()).getItemAt(i));
            }
        } catch (CaException ex) {
            Logger.getLogger(Bienvenida.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIdParqueadero = new javax.swing.JLabel();
        spnNumParq = new javax.swing.JSpinner();
        btnCrear = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblBloque = new javax.swing.JLabel();
        listBloque = new javax.swing.JComboBox<>();
        lblNumApto = new javax.swing.JLabel();
        listaAptos = new javax.swing.JComboBox<>();
        btnSelApto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblIdParqueadero.setText("Número unico de parqueadero:");
        getContentPane().add(lblIdParqueadero, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 190, -1));

        spnNumParq.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9999, 1));
        getContentPane().add(spnNumParq, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 80, -1));

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 110, -1));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblBloque.setText("Seleccione el Bloque:");
        jPanel1.add(lblBloque, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 130, -1));

        jPanel1.add(listBloque, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 50, -1));

        lblNumApto.setText("Número de apartamento al que esta ligado este parqueadero:");
        jPanel1.add(lblNumApto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 340, -1));

        jPanel1.add(listaAptos, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 50, -1));

        btnSelApto.setText("Seleccionar Apartamento");
        btnSelApto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelAptoActionPerformed(evt);
            }
        });
        jPanel1.add(btnSelApto, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 480, 190));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        try {
            parqueadero = new Parqueadero((int) spnNumParq.getValue(), (int) listaAptos.getSelectedItem());
            inmobiliaria.incluirParqueadero(parqueadero);
        } catch (CaException ex) {
            Logger.getLogger(JFrameParqueadero.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnSelAptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelAptoActionPerformed
        listaAptos();
        lblNumApto.setVisible(true);
        listaAptos.setVisible(true);
        btnCrear.setEnabled(true);
        btnSelApto.setEnabled(false);
    }//GEN-LAST:event_btnSelAptoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnSelApto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblBloque;
    private javax.swing.JLabel lblIdParqueadero;
    private javax.swing.JLabel lblNumApto;
    private javax.swing.JComboBox<String> listBloque;
    private javax.swing.JComboBox<String> listaAptos;
    private javax.swing.JSpinner spnNumParq;
    // End of variables declaration//GEN-END:variables
}
